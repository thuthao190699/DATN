#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_DATN")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBai(Bai instance);
    partial void UpdateBai(Bai instance);
    partial void DeleteBai(Bai instance);
    partial void InsertChuong(Chuong instance);
    partial void UpdateChuong(Chuong instance);
    partial void DeleteChuong(Chuong instance);
    partial void InsertDoiTuongLienQuan(DoiTuongLienQuan instance);
    partial void UpdateDoiTuongLienQuan(DoiTuongLienQuan instance);
    partial void DeleteDoiTuongLienQuan(DoiTuongLienQuan instance);
    partial void InsertMuc(Muc instance);
    partial void UpdateMuc(Muc instance);
    partial void DeleteMuc(Muc instance);
    partial void InsertLoaiKienThuc(LoaiKienThuc instance);
    partial void UpdateLoaiKienThuc(LoaiKienThuc instance);
    partial void DeleteLoaiKienThuc(LoaiKienThuc instance);
    partial void InsertTuDienKienThuc(TuDienKienThuc instance);
    partial void UpdateTuDienKienThuc(TuDienKienThuc instance);
    partial void DeleteTuDienKienThuc(TuDienKienThuc instance);
    partial void InsertLoaiLienQuan(LoaiLienQuan instance);
    partial void UpdateLoaiLienQuan(LoaiLienQuan instance);
    partial void DeleteLoaiLienQuan(LoaiLienQuan instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DB_DATNConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bai> Bais
		{
			get
			{
				return this.GetTable<Bai>();
			}
		}
		
		public System.Data.Linq.Table<Chuong> Chuongs
		{
			get
			{
				return this.GetTable<Chuong>();
			}
		}
		
		public System.Data.Linq.Table<DoiTuongLienQuan> DoiTuongLienQuans
		{
			get
			{
				return this.GetTable<DoiTuongLienQuan>();
			}
		}
		
		public System.Data.Linq.Table<Muc> Mucs
		{
			get
			{
				return this.GetTable<Muc>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKienThuc> LoaiKienThucs
		{
			get
			{
				return this.GetTable<LoaiKienThuc>();
			}
		}
		
		public System.Data.Linq.Table<TuDienKienThuc> TuDienKienThucs
		{
			get
			{
				return this.GetTable<TuDienKienThuc>();
			}
		}
		
		public System.Data.Linq.Table<LoaiLienQuan> LoaiLienQuans
		{
			get
			{
				return this.GetTable<LoaiLienQuan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bai")]
	public partial class Bai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBai;
		
		private string _TenBai;
		
		private string _MaChuong;
		
		private EntitySet<Muc> _Mucs;
		
		private EntityRef<Chuong> _Chuong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBaiChanging(string value);
    partial void OnMaBaiChanged();
    partial void OnTenBaiChanging(string value);
    partial void OnTenBaiChanged();
    partial void OnMaChuongChanging(string value);
    partial void OnMaChuongChanged();
    #endregion
		
		public Bai()
		{
			this._Mucs = new EntitySet<Muc>(new Action<Muc>(this.attach_Mucs), new Action<Muc>(this.detach_Mucs));
			this._Chuong = default(EntityRef<Chuong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBai", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBai
		{
			get
			{
				return this._MaBai;
			}
			set
			{
				if ((this._MaBai != value))
				{
					this.OnMaBaiChanging(value);
					this.SendPropertyChanging();
					this._MaBai = value;
					this.SendPropertyChanged("MaBai");
					this.OnMaBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBai", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenBai
		{
			get
			{
				return this._TenBai;
			}
			set
			{
				if ((this._TenBai != value))
				{
					this.OnTenBaiChanging(value);
					this.SendPropertyChanging();
					this._TenBai = value;
					this.SendPropertyChanged("TenBai");
					this.OnTenBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuong", DbType="NVarChar(20)")]
		public string MaChuong
		{
			get
			{
				return this._MaChuong;
			}
			set
			{
				if ((this._MaChuong != value))
				{
					if (this._Chuong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChuongChanging(value);
					this.SendPropertyChanging();
					this._MaChuong = value;
					this.SendPropertyChanged("MaChuong");
					this.OnMaChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bai_Muc", Storage="_Mucs", ThisKey="MaBai", OtherKey="MaBai")]
		public EntitySet<Muc> Mucs
		{
			get
			{
				return this._Mucs;
			}
			set
			{
				this._Mucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuong_Bai", Storage="_Chuong", ThisKey="MaChuong", OtherKey="MaChuong", IsForeignKey=true)]
		public Chuong Chuong
		{
			get
			{
				return this._Chuong.Entity;
			}
			set
			{
				Chuong previousValue = this._Chuong.Entity;
				if (((previousValue != value) 
							|| (this._Chuong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chuong.Entity = null;
						previousValue.Bais.Remove(this);
					}
					this._Chuong.Entity = value;
					if ((value != null))
					{
						value.Bais.Add(this);
						this._MaChuong = value.MaChuong;
					}
					else
					{
						this._MaChuong = default(string);
					}
					this.SendPropertyChanged("Chuong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mucs(Muc entity)
		{
			this.SendPropertyChanging();
			entity.Bai = this;
		}
		
		private void detach_Mucs(Muc entity)
		{
			this.SendPropertyChanging();
			entity.Bai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chuong")]
	public partial class Chuong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChuong;
		
		private string _TenChuong;
		
		private EntitySet<Bai> _Bais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChuongChanging(string value);
    partial void OnMaChuongChanged();
    partial void OnTenChuongChanging(string value);
    partial void OnTenChuongChanged();
    #endregion
		
		public Chuong()
		{
			this._Bais = new EntitySet<Bai>(new Action<Bai>(this.attach_Bais), new Action<Bai>(this.detach_Bais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChuong", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChuong
		{
			get
			{
				return this._MaChuong;
			}
			set
			{
				if ((this._MaChuong != value))
				{
					this.OnMaChuongChanging(value);
					this.SendPropertyChanging();
					this._MaChuong = value;
					this.SendPropertyChanged("MaChuong");
					this.OnMaChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenChuong", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenChuong
		{
			get
			{
				return this._TenChuong;
			}
			set
			{
				if ((this._TenChuong != value))
				{
					this.OnTenChuongChanging(value);
					this.SendPropertyChanging();
					this._TenChuong = value;
					this.SendPropertyChanged("TenChuong");
					this.OnTenChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chuong_Bai", Storage="_Bais", ThisKey="MaChuong", OtherKey="MaChuong")]
		public EntitySet<Bai> Bais
		{
			get
			{
				return this._Bais;
			}
			set
			{
				this._Bais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bais(Bai entity)
		{
			this.SendPropertyChanging();
			entity.Chuong = this;
		}
		
		private void detach_Bais(Bai entity)
		{
			this.SendPropertyChanging();
			entity.Chuong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoiTuongLienQuan")]
	public partial class DoiTuongLienQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKienThuc1;
		
		private string _MaLoaiLienQuan;
		
		private EntityRef<TuDienKienThuc> _TuDienKienThuc;
		
		private EntityRef<LoaiLienQuan> _LoaiLienQuan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKienThuc1Changing(string value);
    partial void OnMaKienThuc1Changed();
    partial void OnMaLoaiLienQuanChanging(string value);
    partial void OnMaLoaiLienQuanChanged();
    #endregion
		
		public DoiTuongLienQuan()
		{
			this._TuDienKienThuc = default(EntityRef<TuDienKienThuc>);
			this._LoaiLienQuan = default(EntityRef<LoaiLienQuan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKienThuc1", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKienThuc1
		{
			get
			{
				return this._MaKienThuc1;
			}
			set
			{
				if ((this._MaKienThuc1 != value))
				{
					if (this._TuDienKienThuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKienThuc1Changing(value);
					this.SendPropertyChanging();
					this._MaKienThuc1 = value;
					this.SendPropertyChanged("MaKienThuc1");
					this.OnMaKienThuc1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiLienQuan", DbType="NVarChar(20)")]
		public string MaLoaiLienQuan
		{
			get
			{
				return this._MaLoaiLienQuan;
			}
			set
			{
				if ((this._MaLoaiLienQuan != value))
				{
					if (this._LoaiLienQuan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiLienQuanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiLienQuan = value;
					this.SendPropertyChanged("MaLoaiLienQuan");
					this.OnMaLoaiLienQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuDienKienThuc_DoiTuongLienQuan", Storage="_TuDienKienThuc", ThisKey="MaKienThuc1", OtherKey="MaKienThuc", IsForeignKey=true)]
		public TuDienKienThuc TuDienKienThuc
		{
			get
			{
				return this._TuDienKienThuc.Entity;
			}
			set
			{
				TuDienKienThuc previousValue = this._TuDienKienThuc.Entity;
				if (((previousValue != value) 
							|| (this._TuDienKienThuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TuDienKienThuc.Entity = null;
						previousValue.DoiTuongLienQuan = null;
					}
					this._TuDienKienThuc.Entity = value;
					if ((value != null))
					{
						value.DoiTuongLienQuan = this;
						this._MaKienThuc1 = value.MaKienThuc;
					}
					else
					{
						this._MaKienThuc1 = default(string);
					}
					this.SendPropertyChanged("TuDienKienThuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiLienQuan_DoiTuongLienQuan", Storage="_LoaiLienQuan", ThisKey="MaLoaiLienQuan", OtherKey="MaLoaiLienQuan", IsForeignKey=true)]
		public LoaiLienQuan LoaiLienQuan
		{
			get
			{
				return this._LoaiLienQuan.Entity;
			}
			set
			{
				LoaiLienQuan previousValue = this._LoaiLienQuan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiLienQuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiLienQuan.Entity = null;
						previousValue.DoiTuongLienQuans.Remove(this);
					}
					this._LoaiLienQuan.Entity = value;
					if ((value != null))
					{
						value.DoiTuongLienQuans.Add(this);
						this._MaLoaiLienQuan = value.MaLoaiLienQuan;
					}
					else
					{
						this._MaLoaiLienQuan = default(string);
					}
					this.SendPropertyChanged("LoaiLienQuan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Muc")]
	public partial class Muc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMuc;
		
		private string _TenMuc;
		
		private string _MaBai;
		
		private EntitySet<TuDienKienThuc> _TuDienKienThucs;
		
		private EntityRef<Bai> _Bai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMucChanging(string value);
    partial void OnMaMucChanged();
    partial void OnTenMucChanging(string value);
    partial void OnTenMucChanged();
    partial void OnMaBaiChanging(string value);
    partial void OnMaBaiChanged();
    #endregion
		
		public Muc()
		{
			this._TuDienKienThucs = new EntitySet<TuDienKienThuc>(new Action<TuDienKienThuc>(this.attach_TuDienKienThucs), new Action<TuDienKienThuc>(this.detach_TuDienKienThucs));
			this._Bai = default(EntityRef<Bai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMuc", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMuc
		{
			get
			{
				return this._MaMuc;
			}
			set
			{
				if ((this._MaMuc != value))
				{
					this.OnMaMucChanging(value);
					this.SendPropertyChanging();
					this._MaMuc = value;
					this.SendPropertyChanged("MaMuc");
					this.OnMaMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMuc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenMuc
		{
			get
			{
				return this._TenMuc;
			}
			set
			{
				if ((this._TenMuc != value))
				{
					this.OnTenMucChanging(value);
					this.SendPropertyChanging();
					this._TenMuc = value;
					this.SendPropertyChanged("TenMuc");
					this.OnTenMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBai", DbType="NVarChar(20)")]
		public string MaBai
		{
			get
			{
				return this._MaBai;
			}
			set
			{
				if ((this._MaBai != value))
				{
					if (this._Bai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBaiChanging(value);
					this.SendPropertyChanging();
					this._MaBai = value;
					this.SendPropertyChanged("MaBai");
					this.OnMaBaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Muc_TuDienKienThuc", Storage="_TuDienKienThucs", ThisKey="MaMuc", OtherKey="MaMuc")]
		public EntitySet<TuDienKienThuc> TuDienKienThucs
		{
			get
			{
				return this._TuDienKienThucs;
			}
			set
			{
				this._TuDienKienThucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bai_Muc", Storage="_Bai", ThisKey="MaBai", OtherKey="MaBai", IsForeignKey=true)]
		public Bai Bai
		{
			get
			{
				return this._Bai.Entity;
			}
			set
			{
				Bai previousValue = this._Bai.Entity;
				if (((previousValue != value) 
							|| (this._Bai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bai.Entity = null;
						previousValue.Mucs.Remove(this);
					}
					this._Bai.Entity = value;
					if ((value != null))
					{
						value.Mucs.Add(this);
						this._MaBai = value.MaBai;
					}
					else
					{
						this._MaBai = default(string);
					}
					this.SendPropertyChanged("Bai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuDienKienThucs(TuDienKienThuc entity)
		{
			this.SendPropertyChanging();
			entity.Muc = this;
		}
		
		private void detach_TuDienKienThucs(TuDienKienThuc entity)
		{
			this.SendPropertyChanging();
			entity.Muc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKienThuc")]
	public partial class LoaiKienThuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiKienThuc;
		
		private string _TenLoaiKienThuc;
		
		private EntitySet<TuDienKienThuc> _TuDienKienThucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiKienThucChanging(string value);
    partial void OnMaLoaiKienThucChanged();
    partial void OnTenLoaiKienThucChanging(string value);
    partial void OnTenLoaiKienThucChanged();
    #endregion
		
		public LoaiKienThuc()
		{
			this._TuDienKienThucs = new EntitySet<TuDienKienThuc>(new Action<TuDienKienThuc>(this.attach_TuDienKienThucs), new Action<TuDienKienThuc>(this.detach_TuDienKienThucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiKienThuc", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiKienThuc
		{
			get
			{
				return this._MaLoaiKienThuc;
			}
			set
			{
				if ((this._MaLoaiKienThuc != value))
				{
					this.OnMaLoaiKienThucChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiKienThuc = value;
					this.SendPropertyChanged("MaLoaiKienThuc");
					this.OnMaLoaiKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiKienThuc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenLoaiKienThuc
		{
			get
			{
				return this._TenLoaiKienThuc;
			}
			set
			{
				if ((this._TenLoaiKienThuc != value))
				{
					this.OnTenLoaiKienThucChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiKienThuc = value;
					this.SendPropertyChanged("TenLoaiKienThuc");
					this.OnTenLoaiKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKienThuc_TuDienKienThuc", Storage="_TuDienKienThucs", ThisKey="MaLoaiKienThuc", OtherKey="MaLoaiKienThuc")]
		public EntitySet<TuDienKienThuc> TuDienKienThucs
		{
			get
			{
				return this._TuDienKienThucs;
			}
			set
			{
				this._TuDienKienThucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TuDienKienThucs(TuDienKienThuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKienThuc = this;
		}
		
		private void detach_TuDienKienThucs(TuDienKienThuc entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKienThuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TuDienKienThuc")]
	public partial class TuDienKienThuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKienThuc;
		
		private string _TenKienThuc;
		
		private string _NoiDungKienThuc;
		
		private string _MaMuc;
		
		private string _MaLoaiKienThuc;
		
		private EntityRef<DoiTuongLienQuan> _DoiTuongLienQuan;
		
		private EntityRef<LoaiKienThuc> _LoaiKienThuc;
		
		private EntityRef<Muc> _Muc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKienThucChanging(string value);
    partial void OnMaKienThucChanged();
    partial void OnTenKienThucChanging(string value);
    partial void OnTenKienThucChanged();
    partial void OnNoiDungKienThucChanging(string value);
    partial void OnNoiDungKienThucChanged();
    partial void OnMaMucChanging(string value);
    partial void OnMaMucChanged();
    partial void OnMaLoaiKienThucChanging(string value);
    partial void OnMaLoaiKienThucChanged();
    #endregion
		
		public TuDienKienThuc()
		{
			this._DoiTuongLienQuan = default(EntityRef<DoiTuongLienQuan>);
			this._LoaiKienThuc = default(EntityRef<LoaiKienThuc>);
			this._Muc = default(EntityRef<Muc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKienThuc", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKienThuc
		{
			get
			{
				return this._MaKienThuc;
			}
			set
			{
				if ((this._MaKienThuc != value))
				{
					this.OnMaKienThucChanging(value);
					this.SendPropertyChanging();
					this._MaKienThuc = value;
					this.SendPropertyChanged("MaKienThuc");
					this.OnMaKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKienThuc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenKienThuc
		{
			get
			{
				return this._TenKienThuc;
			}
			set
			{
				if ((this._TenKienThuc != value))
				{
					this.OnTenKienThucChanging(value);
					this.SendPropertyChanging();
					this._TenKienThuc = value;
					this.SendPropertyChanged("TenKienThuc");
					this.OnTenKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDungKienThuc", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NoiDungKienThuc
		{
			get
			{
				return this._NoiDungKienThuc;
			}
			set
			{
				if ((this._NoiDungKienThuc != value))
				{
					this.OnNoiDungKienThucChanging(value);
					this.SendPropertyChanging();
					this._NoiDungKienThuc = value;
					this.SendPropertyChanged("NoiDungKienThuc");
					this.OnNoiDungKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMuc", DbType="NVarChar(20)")]
		public string MaMuc
		{
			get
			{
				return this._MaMuc;
			}
			set
			{
				if ((this._MaMuc != value))
				{
					if (this._Muc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMucChanging(value);
					this.SendPropertyChanging();
					this._MaMuc = value;
					this.SendPropertyChanged("MaMuc");
					this.OnMaMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiKienThuc", DbType="NVarChar(20)")]
		public string MaLoaiKienThuc
		{
			get
			{
				return this._MaLoaiKienThuc;
			}
			set
			{
				if ((this._MaLoaiKienThuc != value))
				{
					if (this._LoaiKienThuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiKienThucChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiKienThuc = value;
					this.SendPropertyChanged("MaLoaiKienThuc");
					this.OnMaLoaiKienThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TuDienKienThuc_DoiTuongLienQuan", Storage="_DoiTuongLienQuan", ThisKey="MaKienThuc", OtherKey="MaKienThuc1", IsUnique=true, IsForeignKey=false)]
		public DoiTuongLienQuan DoiTuongLienQuan
		{
			get
			{
				return this._DoiTuongLienQuan.Entity;
			}
			set
			{
				DoiTuongLienQuan previousValue = this._DoiTuongLienQuan.Entity;
				if (((previousValue != value) 
							|| (this._DoiTuongLienQuan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DoiTuongLienQuan.Entity = null;
						previousValue.TuDienKienThuc = null;
					}
					this._DoiTuongLienQuan.Entity = value;
					if ((value != null))
					{
						value.TuDienKienThuc = this;
					}
					this.SendPropertyChanged("DoiTuongLienQuan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKienThuc_TuDienKienThuc", Storage="_LoaiKienThuc", ThisKey="MaLoaiKienThuc", OtherKey="MaLoaiKienThuc", IsForeignKey=true)]
		public LoaiKienThuc LoaiKienThuc
		{
			get
			{
				return this._LoaiKienThuc.Entity;
			}
			set
			{
				LoaiKienThuc previousValue = this._LoaiKienThuc.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKienThuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKienThuc.Entity = null;
						previousValue.TuDienKienThucs.Remove(this);
					}
					this._LoaiKienThuc.Entity = value;
					if ((value != null))
					{
						value.TuDienKienThucs.Add(this);
						this._MaLoaiKienThuc = value.MaLoaiKienThuc;
					}
					else
					{
						this._MaLoaiKienThuc = default(string);
					}
					this.SendPropertyChanged("LoaiKienThuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Muc_TuDienKienThuc", Storage="_Muc", ThisKey="MaMuc", OtherKey="MaMuc", IsForeignKey=true)]
		public Muc Muc
		{
			get
			{
				return this._Muc.Entity;
			}
			set
			{
				Muc previousValue = this._Muc.Entity;
				if (((previousValue != value) 
							|| (this._Muc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Muc.Entity = null;
						previousValue.TuDienKienThucs.Remove(this);
					}
					this._Muc.Entity = value;
					if ((value != null))
					{
						value.TuDienKienThucs.Add(this);
						this._MaMuc = value.MaMuc;
					}
					else
					{
						this._MaMuc = default(string);
					}
					this.SendPropertyChanged("Muc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiLienQuan")]
	public partial class LoaiLienQuan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiLienQuan;
		
		private string _TenLoaiLienQuan;
		
		private EntitySet<DoiTuongLienQuan> _DoiTuongLienQuans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiLienQuanChanging(string value);
    partial void OnMaLoaiLienQuanChanged();
    partial void OnTenLoaiLienQuanChanging(string value);
    partial void OnTenLoaiLienQuanChanged();
    #endregion
		
		public LoaiLienQuan()
		{
			this._DoiTuongLienQuans = new EntitySet<DoiTuongLienQuan>(new Action<DoiTuongLienQuan>(this.attach_DoiTuongLienQuans), new Action<DoiTuongLienQuan>(this.detach_DoiTuongLienQuans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiLienQuan", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiLienQuan
		{
			get
			{
				return this._MaLoaiLienQuan;
			}
			set
			{
				if ((this._MaLoaiLienQuan != value))
				{
					this.OnMaLoaiLienQuanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiLienQuan = value;
					this.SendPropertyChanged("MaLoaiLienQuan");
					this.OnMaLoaiLienQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiLienQuan", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TenLoaiLienQuan
		{
			get
			{
				return this._TenLoaiLienQuan;
			}
			set
			{
				if ((this._TenLoaiLienQuan != value))
				{
					this.OnTenLoaiLienQuanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiLienQuan = value;
					this.SendPropertyChanged("TenLoaiLienQuan");
					this.OnTenLoaiLienQuanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiLienQuan_DoiTuongLienQuan", Storage="_DoiTuongLienQuans", ThisKey="MaLoaiLienQuan", OtherKey="MaLoaiLienQuan")]
		public EntitySet<DoiTuongLienQuan> DoiTuongLienQuans
		{
			get
			{
				return this._DoiTuongLienQuans;
			}
			set
			{
				this._DoiTuongLienQuans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoiTuongLienQuans(DoiTuongLienQuan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiLienQuan = this;
		}
		
		private void detach_DoiTuongLienQuans(DoiTuongLienQuan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiLienQuan = null;
		}
	}
}
#pragma warning restore 1591
